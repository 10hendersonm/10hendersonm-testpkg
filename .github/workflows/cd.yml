name: CD

# Only trigger, when the build workflow succeeded
on:
  workflow_run:
    workflows:
      - CI
    branches:
      - main
    types:
      - completed

jobs:
  Setup:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Load Deployment
        uses: actions/cache@v2
        env:
          cache-name: deployment-cache
        with:
          path: './**/*'
          key: ${{ github.event.workflow_run.head_sha }} # commit hash
      
      - name: Configure Git
        env:
          GH_EMAIL: ${{ secrets.GH_EMAIL }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_USER: ${{ secrets.GH_USER }}
        run: |
          git config --local user.name "$GH_USER"
          git config --local user.email "$GH_EMAIL"
          git remote set-url origin "https://x-access-token:$GH_TOKEN@github.com/$GITHUB_REPOSITORY"

      - name: Validate Git Connection
        run: |
          git ls-remote origin > /dev/null

      - name: Configure NPM
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm set "//registry.npmjs.org/:_authToken=$NPM_TOKEN"

  Release:
    runs-on: ubuntu-latest
    needs: Setup
    steps:
      - name: Create Git Release
        run: |
          npx standard-version --releaseCommitMessageFormat "chore(release): {{currentTag}} [skip ci]"

      - name: Push Git Release
        run: |
          git push --follow-tags origin $GITHUB_REF

  Publish:
    runs-on: ubuntu-latest
    needs: Release
    steps:
      - name: Publish NPM Package
        run: |
          npm publish

      - name: Revert Release
        if: ${{ failure() }}
        run: |
          NEW_TAG=$(git tag --points-at HEAD)
          
          git tag -d $NEW_TAG
          git push --delete origin $NEW_TAG
          
          git revert --no-commit HEAD
          git commit -m "chore(release): Reverts failed publish $NEW_TAG [skip ci]"

          git push origin $GITHUB_REF
